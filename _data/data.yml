#
# Be aware that even a small syntax error here can lead to failures in output.
#

sidebar:
    position: right # position of the sidebar : left or right
    about: False # set to False or comment line if you want to remove the "how to use?" in the sidebar
    education: False # set to False if you want education in main section instead of in sidebar
    skills: True # set to False if you want skills in main section instead of in sidebar

    # Profile information
    name: Ioannis Prekas
    tagline: Full-Stack Developer
    avatar: profile.png  #place a 100x100 picture inside /assets/images/ folder and provide the name of the file below

    # Sidebar links
    email: johnprek@gmail.com
    phone: +30 6976041075
    timezone: Europe/Athens
    citizenship: Greek
    website: #do not add http://
    linkedin: giannis-prekas
    github: PrekssOrg
    telegram: prekss
    gitlab:
    bitbucket:
    twitter: 
    stack-overflow: # Number/Username, e.g. 123456/alandoe
    codewars:
    goodreads: # Number-Username, e.g. 123456-alandoe
    pdf: http://www.africau.edu/images/default/sample.pdf
    
    languages:
      title: Languages
      info:
        - idiom: Greek
          level: Native

        - idiom: English
          level: Professional

    #interests:
    #  title:
    #  info:
    #    - item:
    #      link:

    #    - item:
    #      link:

    #    - item:
    #      link:

career-profile:
    title: Career Profile
    summary: |
      A 4-year BSc in Electronic Engineering and 2-year MSc in Networking and Data Communication, 3 years of professional experience in ICT department and more than 8 years in Sales and IT department, constitute my technical and professional background. Whenever I get the chance, I immerse myself in programming, particularly in Python, as a means to continuously refine my skills and stay updated with evolving technologies. Skilled in Python, Selenium, Docker, Git, Django, Pytest, Linux System Administration, Bash, HTML, PHP, SQL. My aim is to work in a knowledge driven environment where I can contribute in studying, proposing and designing software solutions, acquire new experiences and propose changes that drive continuous improvement.
education:
    title: Education
    info:
      - degree: MSc in Networking & Data Communications
        university: Kingston University London
        time: 09/2013 - 02/2016
        details:
      - degree: BSc in Electronics Engineering
        university: Technological Educational Institute of Piraeus
        time: 02/2008 - 05/2012
        details: 

experiences:
    title: Experiences
    info:
      - role: Senior Sales Executive & IT Administrator
        time: 07/2015 - Present
        company: All Marine International Services Ltd.
        details: |
          Sales Services:
            - Researching, identifying and contacting leads
            - Following up and renewing sales
            - Bringing in new business and making sales
            
          IT Services:
            - Developing automation tools using Python to enhance sales processes
            - Managing and monitoring network and server infrastructure
            - Ensuring data is backed up on a regular basis
            - Providing technical support to office computer users
            
      - role: ICT Administrator
        time: 10/2012 - 06/2015
        company: Enel Green Power
        details: |
          ICT Services:
            - Managing and monitoring network and server infrastructure
            - Ensuring data is backed up on a regular basis
            - Providing technical support to office computer users & remote collaborators
            - Serving as the initial point of contact for troubleshooting and resolving IT issues
            - Documenting all IT problems and resolutions
            - Liasing with external support company
            - Conducting induction sessions for new staff on IT systems
            - Managing inventory of hardware and maintenance records
            - Ensuring all software is properly licensed
      - role: Sales
        time: 07/2007 - 08/2008
        company: Levi Strauss & Co.
        details: |
          
certifications:
      title: Certifications
      list:
        - name: ITIL v3 Foundation 2011
          start: 04/2015
          end: 
          organization: AXELOS Global Best Practice
          credentialid: 
          credentialurl: 
          credentialname: 
          details: |
            
        - name: WowZapp 2012 - The Worldwide Hackathon for Windows 8
          start: 10/2012
          end:
          organization: Microsoft
          credentialid: 
          credentialurl: 
          credentialname: 
          details: |
          
        - name: International Education Week 2011 â€“ Technology in education process
          start: 10/2011
          end:
          organization: IEEE Student Branch TEI Piraeus
          credentialid: 
          credentialurl: 
          credentialname: 
          details: |
            
projects:
    title: Projects
    intro: 
    assignments:
      - title: WizardNotifier
        link: 
        tagline: "An advanced Python-based application designed to monitor specific web content and provide real-time alerts."
        details: |
          Key Features:
             - Web Content Monitoring: Uses Selenium and undetected_chromedriver to monitor specified web pages for certain text or changes, providing a vigilant watch over user-defined content.
             - Real-Time Telegram Alerts: Employs the Telethon library for Telegram integration, ensuring users receive instant notifications when their specified content criteria are met.
             - Customizable Monitoring Parameters: Allows users to set specific URLs, target texts and refresh rates for personalized monitoring setups, through interactive Telegram command interface.

          Main technologies/libraries used: Python, Selenium, Telethon

      - title: SmartHome
        link: 
        tagline: "A project made for centralized home automation control by bringing a sophisticated and user-friendly web interface that allows for seamless interaction with various home devices."
        details: |
          Key Features:
             - AC Control: Integrates with air conditioning systems to provide functionalities like on/off control, temperature adjustment and scheduling, using the ESPhome (aioesphomeapi) library.
             - Smart Plug Management: Controls smart plugs for lights and other devices with features like on/off toggling and scheduling via the tinytuya library.
             - Camera and Security: Manages home security cameras with on/off capabilities and motion detection alerts using the python-miio library.
             - Live Temperature Updates: Fetches and displays live temperature data from outside the home using OpenWeatherMap API.
             - In-home Thermometer Integration: Shows in-home temperature readings from smart thermometers.
             - Thermostat Management: Offers control over the home thermostat including on/off switching, temperature setting and scheduling via the tinytuya library.
             - Smart Vacuum Robot: Controls a smart vacuum robot, including on/off toggling and scheduling via the python-miio library.
             - Water Heater Control: Manages the water heater with on/off control and scheduling using the pysonofflanr3 library.
             - TV Control: Integrates with TVs using the pywebostv library for seamless control.

          Main technologies/libraries used: Python, Django, AJAX, JavaScript, ESPHome, Python-Miio, Tinytuya, Pywebostv, Pysonofflanr3
      
      - title: CopytipBot
        link: 
        tagline: "A sophisticated Python-based application that revolutionizes the way traders bet by offering an automated betting solution."
        details: |
          Key Features:
             - Automated Betting through Telegram: Utilizes the Telethon library to seamlessly connect with Telegram, enabling users to place bets automatically based on received betting tips.
             - Advanced User Customization: Offers comprehensive configuration through telegram messages for personalized betting experiences. Currently supports 16 different Tipsters for both Football and NBA.
             - Real-Time Notifications and Alerts: Integrates CopytipBotValidate to provide users with immediate updates on betting executions, balance status, and any service interruptions, directly via Telegram.
             - Performance Tracking and Analysis: Employs the Openpyxl library to meticulously record all executed bets in an Excel spreadsheet, facilitating detailed analysis of portfolio performance, betting history and strategy effectiveness per Tipster or overall.

          Main technologies/libraries used: Python, Selenium, Openpyxl, Pycel, Telethon

      - title: CopytipValidate
        link: 
        tagline: "An initiative designed to augment the functionality of CopytipBot."
        details: |
          Key Features:
             - User Verification: Implements a robust verification system by receiving assigned names, MAC addresses and System UUIDs through post requests, to ensure that only authorized users have access to CopytipBot, thereby maintaining control over the distribution and use of the application.
             - Real-Time Telegram Alerts: Provides users with instantaneous notifications on Telegram. These alerts cover a range of important updates, including service disruptions, incidents, low balance status and network failures on the installed machines.

          Main technologies/libraries used: Python, Flask

      - title: AISParser
        link: 
        tagline: "A Python project tailored for the maritime industry to automate and simplify web scraping and data extraction tasks, particularly focusing on vessel information."
        details: |
          Key Features:
             - Automated Vessel Data Extraction: Capable of retrieving vital information such as Vessel's Destination Port, ETA, and Current Status from various online sources.
             - Input from Excel: Accepts an input Excel file with a list of vessel names, providing a straightforward approach for users to specify the data they need.
             - Efficient Data Export: After scraping and processing the data, AisParser utilizes the Openpyxl library to export the information into a well-organized Excel file, making data analysis and reporting more accessible.

          Main technologies/libraries used: Python, Selenium, Openpyxl

      - title: MisParser
        link: 
        tagline: "A Python-based tool crafted specifically for maritime industry needs, designed to assist users in gathering detailed information about vessels owned by various shipping companies."
        details: |
          Key Features:
             - Targeted Data Extraction: Specialized in retrieving comprehensive vessel information, including Vessel Name, Vessel Type, Year of Build and IMO Number.
             - Input Flexibility: Accepts an Excel file listing shipping companies, serving as the starting point for data scraping operations.
             - Advanced Web Scraping: Utilizes Selenium for dynamic web scraping and Beautiful Soup for parsing HTML, ensuring accurate and efficient data extraction from various web sources.
             - Data Organization and Export: Seamlessly compiles the extracted data and organizes it in a user-friendly format. Utilizes the Openpyxl library to export the organized data back into an Excel file, facilitating easy analysis and reporting.

          Main technologies/libraries used: Python, Selenium, Openpyxl, Beautiful Soup          

      - title: BinanceFuturesPythonBot
        link: 
        tagline: "A Python-based automated trading solution designed specifically for the Binance Futures cryptocurrency exchange."
        details: |
          Key Features:
             - Automated Trading Strategies: Supports the execution of various trading strategies, customizable to individual trader needs.
             - Integration with Telegram: Utilizes the Telethon library to connect to Telegram, parsing and executing trading signals based on user-defined settings.
             - Advanced Trading Settings: Includes comprehensive features like leverage adjustment, position sizing, distribution across up to 7 targets, breakeven points, trailing stops and specific take profit/stop loss levels.
             - Real-Time Market Data: Leverages the Binance Futures API for access to real-time market data, crucial for making informed trading decisions.
             - User Commands for Monitoring: Offers a variety of commands to check current balance, open positions, and orders, enhancing user control and oversight.
             - Multi-Platform Notifications: Enables real-time notifications through Pushbullet, Pushover, and Telegram about trade executions, market conditions, and bot activities.
             - Trade History and Performance Tracking: Maintains a comprehensive record of all executed trades in a SQLite database, facilitating thorough monitoring of portfolio performance and analysis of strategy effectiveness.

          Main technologies/libraries used: Python, REST APIs, SQLite, Telethon

      - title: Design and maintenance of the web pages for student registration in the University labs at ATEI Piraeus
        link: 
        tagline: 
        details: |
          Key Features:
             - Web Design and Development: Leveraged HTML and PHP to construct and enhance the user interface, ensuring an intuitive and efficient user experience for students navigating the registration process.
             - Interactive Elements: Utilized JavaScript to integrate dynamic and interactive features, thereby creating a more engaging and user-friendly web environment.
             - Database Management: Employed SQL for robust database handling, focusing on secure and organized storage of student registration data.
             - Ongoing Maintenance: Regularly updated and maintained the web pages to ensure seamless functionality, current information, and optimal performance.

          Main technologies used: HTML, PHP, SQL, JavaScript

skills:
    title: Skills &amp; Proficiency

    toolset:
      - name: Python, Django & Flask
        level: 98%

      - name: Selenium
        level: 98%

      - name: SQL
        level: 90%        

      - name: Windows System Administration
        level: 90%

      - name: Software Testing
        level: 80%

      - name: Linux & Bash
        level: 80%

      - name: Git & Github
        level: 80%

      - name: REST APIs
        level: 75%

      - name: Docker & Kubernetes
        level: 70%

      - name: HTML5 & CSS
        level: 70%

      - name: JavaScript & AJAX
        level: 60%
